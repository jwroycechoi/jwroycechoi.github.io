#install.packages("DBI")
#devtools::install_github("rstats-db/bigrquery")
library(tidyverse)
library(ggplot2)
## Create a V2 merged dataset ##
tx_bb_entrepreneur_merged_v2 <- tx_bb_entrepreneur_merged %>%
mutate(FIPS = as.character(FIPS)) %>%
left_join(., cbp_tx, by = c("FIPS" = "county_FIPS")) %>%
left_join(., nonemp_tx, by = c("FIPS" = "county_FIPS")) %>%
left_join(., acs_broadband_pct_tx, by = c("FIPS" = "county_FIPS")) %>%
left_join(., bea_nonfarmproprietor_tx, by = c("FIPS" = "GeoFips")) %>%
left_join(., firmlevel_tx, by = c("FIPS" = "county_FIPS"))
## Import the Dataset
ms_broadband <- read.csv("https://raw.githubusercontent.com/microsoft/USBroadbandUsagePercentages/master/dataset/broadband_data.csv", header = T)
## Inspect Structure
str(ms_broadband)
## Create new variabes in numeric form
ms_broadband <- ms_broadband %>%
mutate(pct_broadband_FCC = as.numeric(levels(BROADBAND.AVAILABILITY.PER.FCC))[BROADBAND.AVAILABILITY.PER.FCC],
pct_broadband_MS = as.numeric(levels(BROADBAND.USAGE))[BROADBAND.USAGE])
## Filtering TX
ms_broadband_tx <- ms_broadband %>%
filter(ST == "TX") %>% droplevels() # Deletes unused levels in factor variables in a dataset
## Inspect the result
str(ms_broadband_tx)
## Import the Dataset
godaddy_cbsa <- read.csv("https://raw.githubusercontent.com/jwroycechoi/broadband-entrepreneurship/master/Datasets/GoDaddy_CBSA.csv", header = T)    # GoDaddy dataset at the unit of Core Based Statistical Area (CBSA) defined by U.S. Department of Housing and Urban Development
godaddy_county <- read.csv("https://raw.githubusercontent.com/jwroycechoi/broadband-entrepreneurship/master/Datasets/GoDaddy_County.csv", header = T)    # GoDaddy dataset at the county level
godaddy_county_tx <- godaddy_county %>%
filter(startsWith(as.character(cfips), "48")) %>% # Filter Texas
mutate(population = as.numeric(gsub(",","",as.character(population)))) %>% # Convert population from factor to numeric
separate(county, into = c("county", "state"), sep = ", ", remove = T) %>% # Separate county variable which had state and county data at the same time
droplevels()  # Drop unused levels from factor variables
## Import the Dataset
mlab_sept <- read.csv("https://raw.githubusercontent.com/jwroycechoi/broadband-entrepreneurship/master/Datasets/Mlab_State_All_Sept_2019_2.csv", header = T)
mlab_oct <- read.csv("https://raw.githubusercontent.com/jwroycechoi/broadband-entrepreneurship/master/Datasets/Mlab_State_All_Oct_2019_2.csv", header = T)
mlab_nov <- read.csv("https://raw.githubusercontent.com/jwroycechoi/broadband-entrepreneurship/master/Datasets/Mlab_State_All_Nov_2019_2.csv", header = T)
#### Cleaning and Filtering the Dataset ####
## September 2019 ##
mlab_sept_tx <- mlab_sept %>%
filter(state == "TX") %>%
select(-c("BB_state","BB_county_name","DLmed_state","DLmed_county_name","ULmed_state","ULmed_county_name","ul_sample_state","ul_sample_county_name","dl_sample_state","dl_sample_county_name")) %>%
mutate(county = paste(as.character(county_name), "County", sep = " "),
frac_over_25DL = 1 - frac_under_25mbpsDL) %>%
droplevels()
## October 2019 ##
mlab_oct_tx <- mlab_oct %>%
filter(state == "TX") %>%
select(-c("BB_state","BB_county_name","DLmed_state","DLmed_county_name","ULmed_state","ULmed_county_name","ul_sample_state","ul_sample_county_name","dl_sample_state","dl_sample_county_name")) %>%
mutate(county = paste(as.character(county_name), "County", sep = " "),
frac_over_25DL = 1 - frac_under_25mbpsDL) %>%
droplevels()
## November 2019 ##
mlab_nov_tx <- mlab_nov %>%
filter(state == "TX") %>%
select(-c("BB_state","BB_county_name","DLmed_state","DLmed_county_name","ULmed_state","ULmed_county_name","ul_sample_state","ul_sample_county_name","dl_sample_state","dl_sample_county_name")) %>%
mutate(county = paste(as.character(county_name), "County", sep = " "),
frac_over_25DL = 1 - frac_under_25mbpsDL) %>%
droplevels()
## December 2019 ##
mlab_dec_tx <- mlab_dec %>%
filter(state == "TX") %>%
select(-c("BB_state","BB_county_name","DLmed_state","DLmed_county_name","ULmed_state","ULmed_county_name","ul_sample_state","ul_sample_county_name","dl_sample_state","dl_sample_county_name")) %>%
mutate(county = paste(as.character(county_name), "County", sep = " "),
frac_over_25DL = 1 - frac_under_25mbpsDL) %>%
droplevels()
## Import the Dataset
tx_proprietor <- read_csv("https://raw.githubusercontent.com/jwroycechoi/broadband-entrepreneurship/master/Datasets/Sole-Proprietors-tx-combined.csv")
## Import the Dataset
rural_2000 <- read_csv("https://raw.githubusercontent.com/jwroycechoi/broadband-entrepreneurship/master/Datasets/IRR-rural-2000.csv")
rural_2010 <- read_csv("https://raw.githubusercontent.com/jwroycechoi/broadband-entrepreneurship/master/Datasets/IRR-rural-2010.csv")
rural_2000_tx <- rural_2000 %>%
filter(startsWith(as.character(FIPS2000), "48")) %>%
separate(`County Name`, into = c("county", "state"), sep = ", ", remove = T)
rural_2010_tx <- rural_2010 %>%
filter(startsWith(as.character(FIPS2010), "48")) %>%
separate(`County Name`, into = c("county", "state"), sep = ", ", remove = T)
#### Inspect the Number of Observations ####
knitr::kable(tibble(MS = count(ms_broadband_tx)$n, godaddy = count(godaddy_county_tx)$n,
mlabsept = count(mlab_sept_tx)$n, mlaboct = count(mlab_oct_tx)$n, mlabnov = count(mlab_nov_tx)$n, mlabdec = count(mlab_dec_tx)$n,
txprop = count(tx_proprietor)$n, irr2000 = count(rural_2000_tx)$n, irr2010 = count(rural_2010_tx)$n))
## Create a character vector for ms_broadband_tx dataset to minimize potential error beforehand
ms_broadband_tx <- ms_broadband_tx %>% mutate(county = as.character(COUNTY.NAME))
## Nested left_joins on IRR dataset
names(mlab_sept_tx) <- paste(names(mlab_sept_tx), ".sept", sep = "")
names(mlab_oct_tx) <- paste(names(mlab_oct_tx), ".oct", sep = "")
names(mlab_nov_tx) <- paste(names(mlab_nov_tx), ".nov", sep = "")
names(mlab_dec_tx) <- paste(names(mlab_dec_tx), ".dec", sep = "")
tx_bb_entrepreneur_merged <- left_join(rural_2000_tx, rural_2010_tx, by = "county") %>%
left_join(., tx_proprietor, by = "county") %>%
left_join(., ms_broadband_tx, by = "county") %>%
left_join(., godaddy_county_tx, by = "county") %>%
left_join(., mlab_sept_tx, by = c("county" = "county.sept")) %>%
left_join(., mlab_oct_tx, by = c("county" = "county.oct")) %>%
left_join(., mlab_nov_tx, by = c("county" = "county.nov")) %>%
left_join(., mlab_dec_tx, by = c("county" = "county.dec"))
tx_bb_entrepreneur_merged <- tx_bb_entrepreneur_merged %>%
rename(FIPS = FIPS2000) %>%
select(-c("FIPS2010","state.x","state.y","ST","COUNTY.ID","COUNTY.NAME","BROADBAND.AVAILABILITY.PER.FCC","BROADBAND.USAGE",
"cfips","state.sept","county_name.sept","state.oct","county_name.oct","state.nov","county_name.nov","state.dec",
"county_name.dec"))
tx_bb_entrepreneur_merged <- tx_bb_entrepreneur_merged %>%  # Converting ASU percentage numbers into fraction
mutate(pctbbfrac_ASU = pctbroadband/100,
pctbbfrac_poor_ASU = pctbroadband_poorpeople/100)
library(censusapi)
# Add key to .Renviron
Sys.setenv(CENSUS_KEY="9001b546c2d77876a089119664dc25a4235eea37")
# Reload .Renviron
readRenviron("~/.Renviron")
# Check to see that the expected key is output in your R console
Sys.getenv("CENSUS_KEY")
## Retrieve CBP datasets for the three states in 2017 and 2018 ##
cbp2012_txksme <- getCensus(name = "cbp",
vintage = 2012,
vars = c("EMP","EMP_F","EMPSZES","EMPSZES_TTL","ESTAB","ESTAB_F","NAICS2012","NAICS2012_TTL"),
region = "county:*",
regionin = "state:20,23,48")
cbp2017_txksme <- getCensus(name = "cbp",
vintage = 2017,
vars = c("EMP","EMP_F","EMPSZES","EMPSZES_LABEL","ESTAB","ESTAB_F","NAICS2017","NAICS2017_LABEL"),
region = "county:*",
regionin = "state:20,23,48")
cbp2018_txksme <- getCensus(name = "cbp",
vintage = 2018,
vars = c("EMP","EMP_F","EMPSZES","EMPSZES_LABEL","ESTAB","ESTAB_F","NAICS2017","NAICS2017_LABEL"),
region = "county:*",
regionin = "state:20,23,48")
## Retrieve Nonemployer datasets for the three states in 2017 and 2018 ##
nonemp2012 <- getCensus(name = "nonemp",
vintage = 2012,
vars = c("NESTAB","NESTAB_F","NAICS2012","NAICS2012_TTL","SECTOR"),
region = "county:*",
regionin = "state:20,23,48")
nonemp2017 <- getCensus(name = "nonemp",
vintage = 2017,
vars = c("NESTAB","NESTAB_F","NAICS2017","NAICS2017_TTL","SECTOR"),
region = "county:*",
regionin = "state:20,23,48")
nonemp2018 <- getCensus(name = "nonemp",
vintage = 2018,
vars = c("NESTAB","NESTAB_F","NAICS2017","NAICS2017_LABEL","SECTOR"),
region = "county:*",
regionin = "state:20,23,48")
## Some modifications for CBP datasets ##
cbp2012_txksme <- cbp2012_txksme %>%
mutate(county_FIPS = paste(state, county, sep = ""),
EMP = as.numeric(EMP),
ESTAB = as.numeric(ESTAB),
EMP = case_when(EMP_F == "a" ~ round(median(seq(0,19)), digits = 0),  # For employment range symbols, replace with median of the range
EMP_F == "b" ~ round(median(seq(20,99)), digits = 0),
EMP_F == "c" ~ round(median(seq(100,249)), digits = 0),
EMP_F == "e" ~ round(median(seq(250,499)), digits = 0),
EMP_F == "f" ~ round(median(seq(500,999)), digits = 0),
EMP_F == "g" ~ round(median(seq(1000,2499)), digits = 0),
EMP_F == "h" ~ round(median(seq(2500,4999)), digits = 0),
EMP_F == "i" ~ round(median(seq(5000,9999)), digits = 0),
EMP_F == "j" ~ round(median(seq(10000,24999)), digits = 0),
EMP_F == "k" ~ round(median(seq(25000,49999)), digits = 0),
EMP_F == "l" ~ round(median(seq(50000,99999)), digits = 0),
EMP_F == "m" ~ 100000,
TRUE ~ EMP))
## Some modifications for CBP datasets ##
cbp2012_txksme <- cbp2012_txksme %>%
mutate(county_FIPS = paste(state, county, sep = ""),
EMP = as.numeric(EMP),
ESTAB = as.numeric(ESTAB),
EMP = case_when(EMP_F == "a" ~ round(median(seq(0,19)), digits = 0),  # For employment range symbols, replace with median of the range
EMP_F == "b" ~ round(median(seq(20,99)), digits = 0),
EMP_F == "c" ~ round(median(seq(100,249)), digits = 0),
EMP_F == "e" ~ round(median(seq(250,499)), digits = 0),
EMP_F == "f" ~ round(median(seq(500,999)), digits = 0),
EMP_F == "g" ~ round(median(seq(1000,2499)), digits = 0),
EMP_F == "h" ~ round(median(seq(2500,4999)), digits = 0),
EMP_F == "i" ~ round(median(seq(5000,9999)), digits = 0),
EMP_F == "j" ~ round(median(seq(10000,24999)), digits = 0),
EMP_F == "k" ~ round(median(seq(25000,49999)), digits = 0),
EMP_F == "l" ~ round(median(seq(50000,99999)), digits = 0),
EMP_F == "m" ~ 100000,
TRUE ~ EMP))
cbp2017_txksme <- cbp2017_txksme %>%
mutate(county_FIPS = paste(state, county, sep = ""),
EMP = as.numeric(EMP),
ESTAB = as.numeric(ESTAB),
EMP = case_when(EMP_F == "a" ~ round(median(seq(0,19)), digits = 0),  # For employment range symbols, replace with median of the range
EMP_F == "b" ~ round(median(seq(20,99)), digits = 0),
EMP_F == "c" ~ round(median(seq(100,249)), digits = 0),
EMP_F == "e" ~ round(median(seq(250,499)), digits = 0),
EMP_F == "f" ~ round(median(seq(500,999)), digits = 0),
EMP_F == "g" ~ round(median(seq(1000,2499)), digits = 0),
EMP_F == "h" ~ round(median(seq(2500,4999)), digits = 0),
EMP_F == "i" ~ round(median(seq(5000,9999)), digits = 0),
EMP_F == "j" ~ round(median(seq(10000,24999)), digits = 0),
EMP_F == "k" ~ round(median(seq(25000,49999)), digits = 0),
EMP_F == "l" ~ round(median(seq(50000,99999)), digits = 0),
EMP_F == "m" ~ 100000,
TRUE ~ EMP))
cbp2018_txksme <- cbp2018_txksme %>%
mutate(county_FIPS = paste(state, county, sep = ""),
EMP = as.numeric(EMP),
ESTAB = as.numeric(ESTAB),
EMP = case_when(EMP_F == "a" ~ round(median(seq(0,19)), digits = 0),  # For employment range symbols, replace with median of the range
EMP_F == "b" ~ round(median(seq(20,99)), digits = 0),
EMP_F == "c" ~ round(median(seq(100,249)), digits = 0),
EMP_F == "e" ~ round(median(seq(250,499)), digits = 0),
EMP_F == "f" ~ round(median(seq(500,999)), digits = 0),
EMP_F == "g" ~ round(median(seq(1000,2499)), digits = 0),
EMP_F == "h" ~ round(median(seq(2500,4999)), digits = 0),
EMP_F == "i" ~ round(median(seq(5000,9999)), digits = 0),
EMP_F == "j" ~ round(median(seq(10000,24999)), digits = 0),
EMP_F == "k" ~ round(median(seq(25000,49999)), digits = 0),
EMP_F == "l" ~ round(median(seq(50000,99999)), digits = 0),
EMP_F == "m" ~ 100000,
TRUE ~ EMP))
# Also, we need to filter for state of Texas at this point of the analysis
cbp2012_tx <- cbp2012_txksme %>% filter(state == "48")
cbp2017_tx <- cbp2017_txksme %>% filter(state == "48")
cbp2018_tx <- cbp2018_txksme %>% filter(state == "48")
## Some modifications for Nonemployer datasets ##
nonemp2012 <- nonemp2012 %>%
mutate(county_FIPS = paste(state, county, sep = ""),
NESTAB = as.numeric(NESTAB))
nonemp2017 <- nonemp2017 %>%
mutate(county_FIPS = paste(state, county, sep = ""),
NESTAB = as.numeric(NESTAB))
nonemp2018 <- nonemp2018 %>%
mutate(county_FIPS = paste(state, county, sep = ""),
NESTAB = as.numeric(NESTAB))
# Filter Texas
nonemp2012_tx <- nonemp2012 %>% filter(state == "48")
nonemp2017_tx <- nonemp2017 %>% filter(state == "48")
nonemp2018_tx <- nonemp2018 %>% filter(state == "48")
#### CBP Dataset Aggregation ####
cbp2012_tx_agg <- cbp2012_tx %>%
filter(NAICS2012 == "00") %>% # Filter for all sectors
filter(EMPSZES == "001"|
EMPSZES == "212"|EMPSZES == "220"|EMPSZES == "230"|EMPSZES == "241") %>% # Filter for employment size
mutate(est_total = ifelse(EMPSZES == "001" & NAICS2012 == "00", ESTAB, 0),
emp_total = ifelse(EMPSZES == "001" & NAICS2012 == "00", EMP, 0),
est_50 = ifelse(EMPSZES != "001", ESTAB, 0),
est_10 = ifelse(EMPSZES == "212" | EMPSZES == "220", ESTAB, 0)) %>%
group_by(county_FIPS) %>%
summarise(emp_cbp_2012 = sum(emp_total, na.rm = T),
est_cbp_2012 = sum(est_total, na.rm = T),
est_50_cbp_2012 = sum(est_50, na.rm = T),
est_10_cbp_2012 = sum(est_10, na.rm = T)) %>%
mutate(pct_50_est_cbp_2012 = est_50_cbp_2012 / est_cbp_2012,
pct_10_est_cbp_2012 = est_10_cbp_2012 / est_cbp_2012)
cbp2017_tx_agg <- cbp2017_tx %>%
filter(NAICS2017 == "00") %>% # Filter for all sectors
filter(EMPSZES == "001"|
EMPSZES == "212"|EMPSZES == "220"|EMPSZES == "230"|EMPSZES == "241") %>% # Filter for employment size
mutate(est_total = ifelse(EMPSZES == "001" & NAICS2017 == "00", ESTAB, 0),
emp_total = ifelse(EMPSZES == "001" & NAICS2017 == "00", EMP, 0),
est_50 = ifelse(EMPSZES != "001", ESTAB, 0),
est_10 = ifelse(EMPSZES == "212" | EMPSZES == "220", ESTAB, 0)) %>%
group_by(county_FIPS) %>%
summarise(emp_cbp_2017 = sum(emp_total, na.rm = T),
est_cbp_2017 = sum(est_total, na.rm = T),
est_50_cbp_2017 = sum(est_50, na.rm = T),
est_10_cbp_2017 = sum(est_10, na.rm = T)) %>%
mutate(pct_50_est_cbp_2017 = est_50_cbp_2017 / est_cbp_2017,
pct_10_est_cbp_2017 = est_10_cbp_2017 / est_cbp_2017)
cbp2018_tx_agg <- cbp2018_tx %>%
filter(NAICS2017 == "00") %>% # Filter for all sectors
filter(EMPSZES == "001"|
EMPSZES == "212"|EMPSZES == "220"|EMPSZES == "230"|EMPSZES == "241") %>% # Filter for employment size
mutate(est_total = ifelse(EMPSZES == "001" & NAICS2017 == "00", ESTAB, 0),
emp_total = ifelse(EMPSZES == "001" & NAICS2017 == "00", EMP, 0),
est_50 = ifelse(EMPSZES != "001", ESTAB, 0),
est_10 = ifelse(EMPSZES == "212" | EMPSZES == "220", ESTAB, 0)) %>%
group_by(county_FIPS) %>%
summarise(emp_cbp_2018 = sum(emp_total, na.rm = T),
est_cbp_2018 = sum(est_total, na.rm = T),
est_50_cbp_2018 = sum(est_50, na.rm = T),
est_10_cbp_2018 = sum(est_10, na.rm = T)) %>%
mutate(pct_50_est_cbp_2018 = est_50_cbp_2018 / est_cbp_2018,
pct_10_est_cbp_2018 = est_10_cbp_2018 / est_cbp_2018)
## Merge three years datasets ##
cbp_tx <- left_join(cbp2012_tx_agg, cbp2017_tx_agg, by = "county_FIPS") %>% left_join(., cbp2018_tx_agg, by = "county_FIPS")
#### Nonemployer Dataset Aggregation ####
nonemp2012_tx_agg <- nonemp2012_tx %>%
mutate(est_total = ifelse(NAICS2012 == "00", NESTAB, 0),
nonfarm_est_total = ifelse(str_detect(NAICS2012, "^11", negate = TRUE), NESTAB, 0),
nonfarm_est_total = ifelse(NAICS2012 == "00", 0, nonfarm_est_total)) %>%
group_by(SECTOR, county_FIPS) %>% slice(1) %>% ungroup() %>%
group_by(county_FIPS) %>%
summarise(neest_nemp_2012 = sum(est_total, na.rm = T),
nonfarmneest_nemp_2012 = sum(nonfarm_est_total, na.rm = T)) %>%
mutate(pct_nonfarmneest_nemp_2012 = nonfarmneest_nemp_2012 / neest_nemp_2012)
nonemp2017_tx_agg <- nonemp2017_tx %>%
mutate(est_total = ifelse(NAICS2017 == "00", NESTAB, 0),
nonfarm_est_total = ifelse(str_detect(NAICS2017, "^11", negate = TRUE), NESTAB, 0),
nonfarm_est_total = ifelse(NAICS2017 == "00", 0, nonfarm_est_total)) %>%
group_by(SECTOR, county_FIPS) %>% slice(1) %>% ungroup() %>%
group_by(county_FIPS) %>%
summarise(neest_nemp_2017 = sum(est_total, na.rm = T),
nonfarmneest_nemp_2017 = sum(nonfarm_est_total, na.rm = T)) %>%
mutate(pct_nonfarmneest_nemp_2017 = nonfarmneest_nemp_2017 / neest_nemp_2017)
nonemp2018_tx_agg <- nonemp2018_tx %>%
mutate(est_total = ifelse(NAICS2017 == "00", NESTAB, 0),
nonfarm_est_total = ifelse(str_detect(NAICS2017, "^11", negate = TRUE), NESTAB, 0),
nonfarm_est_total = ifelse(NAICS2017 == "00", 0, nonfarm_est_total)) %>%
group_by(SECTOR, county_FIPS) %>% slice(1) %>% ungroup() %>%
group_by(county_FIPS) %>%
summarise(neest_nemp_2018 = sum(est_total, na.rm = T),
nonfarmneest_nemp_2018 = sum(nonfarm_est_total, na.rm = T)) %>%
mutate(pct_nonfarmneest_nemp_2018 = nonfarmneest_nemp_2018 / neest_nemp_2018)
## Merge three years datasets ##
nonemp_tx <- left_join(nonemp2012_tx_agg, nonemp2017_tx_agg, by= "county_FIPS") %>% left_join(., nonemp2018_tx_agg, by = "county_FIPS") %>%
mutate(chg_pct_nonfarmneest_nemp_2012_2018 = pct_nonfarmneest_nemp_2018 - pct_nonfarmneest_nemp_2012)
beaKey <- "1C5D7A5A-D3C0-4919-8D47-820A118D7A56"
#### Retrive Data tables from BEA API ####
# LineCode 10
beaSpecs_10 <- list(
'UserID' = beaKey,
'Method' = 'GetData',
'datasetname' = 'Regional',
'TableName' = 'CAEMP25N',
'LineCode' = 10,
'GeoFips' = 'COUNTY',
'Year' = '2012,2018'
)
bea_10 <- beaGet(beaSpecs_10, asWide = TRUE)
library(bea.R)
bea_10 <- beaGet(beaSpecs_10, asWide = TRUE)
# LineCode 20
beaSpecs_20 <- list(
'UserID' = beaKey,
'Method' = 'GetData',
'datasetname' = 'Regional',
'TableName' = 'CAEMP25N',
'LineCode' = 20,
'GeoFips' = 'COUNTY',
'Year' = '2012,2018'
)
bea_20 <- beaGet(beaSpecs_20, asWide = TRUE)
# LineCode 40
beaSpecs_40 <- list(
'UserID' = beaKey,
'Method' = 'GetData',
'datasetname' = 'Regional',
'TableName' = 'CAEMP25N',
'LineCode' = 40,
'GeoFips' = 'COUNTY',
'Year' = '2012,2018'
)
bea_40 <- beaGet(beaSpecs_40, asWide = TRUE)
# LineCode 60
beaSpecs_60 <- list(
'UserID' = beaKey,
'Method' = 'GetData',
'datasetname' = 'Regional',
'TableName' = 'CAEMP25N',
'LineCode' = 60,
'GeoFips' = 'COUNTY',
'Year' = '2012,2018'
)
bea_60 <- beaGet(beaSpecs_60, asWide = TRUE)
#### Clean, Filter the Data Tables and Merge ####
## BEA Total Employment
bea_10 <- bea_10 %>% filter(str_detect(GeoFips, "^48")|str_detect(GeoFips, "^20")|str_detect(GeoFips, "^23")) %>%
select(GeoFips, DataValue_2012, DataValue_2018) %>%
rename(totalemp_bea_2012 = DataValue_2012,
totalemp_bea_2018 = DataValue_2018)
## BEA Wage and Salary Employment
bea_20 <- bea_20 %>% filter(str_detect(GeoFips, "^48")|str_detect(GeoFips, "^20")|str_detect(GeoFips, "^23")) %>%
select(GeoFips, DataValue_2012, DataValue_2018) %>%
rename(salaryemp_bea_2012 = DataValue_2012,
salaryemp_bea_2018 = DataValue_2018)
## BEA Proprietors Employment
bea_40 <- bea_40 %>% filter(str_detect(GeoFips, "^48")|str_detect(GeoFips, "^20")|str_detect(GeoFips, "^23")) %>%
select(GeoFips, DataValue_2012, DataValue_2018) %>%
rename(proprietors_bea_2012 = DataValue_2012,
proprietors_bea_2018 = DataValue_2018)
## BEA Nonfarm Proprietors Employment
bea_60 <- bea_60 %>% filter(str_detect(GeoFips, "^48")|str_detect(GeoFips, "^20")|str_detect(GeoFips, "^23")) %>%
select(GeoFips, DataValue_2012, DataValue_2018) %>%
rename(nonfarmproprietors_bea_2012 = DataValue_2012,
nonfarmproprietors_bea_2018 = DataValue_2018)
## Merge Datasets ##
bea_nonfarmproprietor_txksme <- left_join(bea_10, bea_20, by = "GeoFips") %>%
left_join(., bea_40, by = "GeoFips") %>% left_join(., bea_60, by = "GeoFips")
bea_nonfarmproprietor_txksme <- bea_nonfarmproprietor_txksme %>%
mutate(pct_nonfarm_bea_2012 = nonfarmproprietors_bea_2012 / totalemp_bea_2012,
pct_nonfarm_bea_2018 = nonfarmproprietors_bea_2018 / totalemp_bea_2018,
pct_chg_bea_2012_2018 = pct_nonfarm_bea_2018 - pct_nonfarm_bea_2012)
str(bea_nonfarmproprietor_txksme)
# Finally filter for Texas state
bea_nonfarmproprietor_tx <- bea_nonfarmproprietor_txksme %>%
filter(str_detect(GeoFips, "^48"))
## ABS Company Summary Datatable ##
firmlevel_2017 <- getCensus(name = "abscs",
vintage = 2017,
vars = c("EMP","EMP_F","FIRMPDEMP","FIRMPDEMP_F"),
region = "county:*",
regionin = "state:20,23,48")
firmlevel_2012 <- getCensus(name = "sbo",
vintage = 2012,
vars = c("EMP","EMP_F","FIRMPDEMP","FIRMPDEMP_F"),
region = "county:*",
regionin = "state:20,23,48")
## Clean and transform ##
firmlevel_2012 <- firmlevel_2012 %>%
mutate(county_FIPS = paste(state, county, sep = ""),
EMP = as.numeric(EMP),
FIRMPDEMP = as.numeric(FIRMPDEMP),
EMP = case_when(EMP_F == "a" ~ round(median(seq(0,19)), digits = 0),  # For employment range symbols, replace with median of the range
EMP_F == "b" ~ round(median(seq(20,99)), digits = 0),
EMP_F == "c" ~ round(median(seq(100,249)), digits = 0),
EMP_F == "e" ~ round(median(seq(250,499)), digits = 0),
EMP_F == "f" ~ round(median(seq(500,999)), digits = 0),
EMP_F == "g" ~ round(median(seq(1000,2499)), digits = 0),
EMP_F == "h" ~ round(median(seq(2500,4999)), digits = 0),
EMP_F == "i" ~ round(median(seq(5000,9999)), digits = 0),
EMP_F == "j" ~ round(median(seq(10000,24999)), digits = 0),
EMP_F == "k" ~ round(median(seq(25000,49999)), digits = 0),
EMP_F == "l" ~ round(median(seq(50000,99999)), digits = 0),
EMP_F == "m" ~ 100000,
TRUE ~ EMP),
FIRMPDEMP = case_when(FIRMPDEMP_F == "S" ~ NA_real_, TRUE ~ FIRMPDEMP)) %>%
rename(emp_abs_2012 = EMP, firm_2012 = FIRMPDEMP) %>%
select(-c("EMP_F","FIRMPDEMP_F","state","county"))
firmlevel_2017 <- firmlevel_2017 %>%
mutate(county_FIPS = paste(state, county, sep = ""),
EMP = as.numeric(EMP),
FIRMPDEMP = as.numeric(FIRMPDEMP),
EMP = case_when(EMP_F == "a" ~ round(median(seq(0,19)), digits = 0),  # For employment range symbols, replace with median of the range
EMP_F == "b" ~ round(median(seq(20,99)), digits = 0),
EMP_F == "c" ~ round(median(seq(100,249)), digits = 0),
EMP_F == "e" ~ round(median(seq(250,499)), digits = 0),
EMP_F == "f" ~ round(median(seq(500,999)), digits = 0),
EMP_F == "g" ~ round(median(seq(1000,2499)), digits = 0),
EMP_F == "h" ~ round(median(seq(2500,4999)), digits = 0),
EMP_F == "i" ~ round(median(seq(5000,9999)), digits = 0),
EMP_F == "j" ~ round(median(seq(10000,24999)), digits = 0),
EMP_F == "k" ~ round(median(seq(25000,49999)), digits = 0),
EMP_F == "l" ~ round(median(seq(50000,99999)), digits = 0),
EMP_F == "m" ~ 100000,
TRUE ~ EMP),
FIRMPDEMP = case_when(FIRMPDEMP_F == "S" ~ NA_real_, TRUE ~ FIRMPDEMP)) %>%
rename(emp_abs_2017 = EMP, firm_2017 = FIRMPDEMP) %>%
select(-c("EMP_F","FIRMPDEMP_F","state","county"))
## Join the two years, filter Texas, and calculate change variable ##
firmlevel_tx <- left_join(firmlevel_2012, firmlevel_2017, by = "county_FIPS") %>% filter(str_detect(county_FIPS, "^48")) %>%
mutate(chg_firm_2012_2017 = firm_2017 - firm_2012)
## Broadband Subscription Percentage from Subject Table ##
acs_broadband_pct <- getCensus(name = "acs/acs5/subject", vintage = 2018,
vars = c("S2801_C02_017E","S2801_C02_019E","S2801_C02_016E","S2801_C02_018E"),
region = "county:*",
regionin = "state:20,23,48")
str(acs_broadband_pct)
table(acs_broadband_pct$state)
# Rename variables #
acs_broadband_pct <- acs_broadband_pct %>%
rename(pct_cellular_acs_2018 = S2801_C02_016E,
pct_fixed_acs_2018 = S2801_C02_017E,
pct_sat_acs_2018 = S2801_C02_018E,
pct_nobroadband_acs_2018 = S2801_C02_019E) %>%
mutate(pct_anybroadband_acs_2018 = 100 - pct_nobroadband_acs_2018,
county_FIPS = paste(state, county, sep = ""))
str(acs_broadband_pct)
acs_broadband_pct_tx <- acs_broadband_pct %>%
filter(state == "48")
fcc477_2019 <- read.csv("https://raw.githubusercontent.com/jwroycechoi/broadband-entrepreneurship/master/Datasets/FCC477_TX_June_2019.csv", sep = ";")
## Create a V2 merged dataset ##
tx_bb_entrepreneur_merged_v2 <- tx_bb_entrepreneur_merged %>%
left_join(., cbp_tx, by = c("FIPS" = "county_FIPS")) %>%
left_join(., nonemp_tx, by = c("FIPS" = "county_FIPS")) %>%
left_join(., acs_broadband_pct_tx, by = c("FIPS" = "county_FIPS")) %>%
left_join(., bea_nonfarmproprietor_tx, by = c("FIPS" = "GeoFips")) %>%
left_join(., firmlevel_tx, by = c("FIPS" = "county_FIPS"))
str(tx_bb_entrepreneur_merged)
tx_bb_entrepreneur_merged <- left_join(rural_2000_tx, rural_2010_tx, by = "county") %>%
left_join(., tx_proprietor, by = "county") %>%
left_join(., ms_broadband_tx, by = "county") %>%
left_join(., godaddy_county_tx, by = "county") %>%
left_join(., mlab_sept_tx, by = c("county" = "county.sept")) %>%
left_join(., mlab_oct_tx, by = c("county" = "county.oct")) %>%
left_join(., mlab_nov_tx, by = c("county" = "county.nov")) %>%
left_join(., mlab_dec_tx, by = c("county" = "county.dec"))
tx_bb_entrepreneur_merged <- tx_bb_entrepreneur_merged %>%
rename(FIPS = FIPS2000) %>%
select(-c("FIPS2010","state.x","state.y","ST","COUNTY.ID","COUNTY.NAME","BROADBAND.AVAILABILITY.PER.FCC","BROADBAND.USAGE",
"cfips","state.sept","county_name.sept","state.oct","county_name.oct","state.nov","county_name.nov","state.dec",
"county_name.dec"))
tx_bb_entrepreneur_merged <- tx_bb_entrepreneur_merged %>%  # Converting ASU percentage numbers into fraction
mutate(pctbbfrac_ASU = pctbroadband/100,
pctbbfrac_poor_ASU = pctbroadband_poorpeople/100,
FIPS = as.character(FIPS))
## Create a V2 merged dataset ##
tx_bb_entrepreneur_merged_v2 <- tx_bb_entrepreneur_merged %>%
left_join(., cbp_tx, by = c("FIPS" = "county_FIPS")) %>%
left_join(., nonemp_tx, by = c("FIPS" = "county_FIPS")) %>%
left_join(., acs_broadband_pct_tx, by = c("FIPS" = "county_FIPS")) %>%
left_join(., bea_nonfarmproprietor_tx, by = c("FIPS" = "GeoFips")) %>%
left_join(., firmlevel_tx, by = c("FIPS" = "county_FIPS"))
## Generate average GoDaddy & M-lab broadband measures and clean unnecessary variables ##
tx_bb_entrepreneur_merged_v2 <- tx_bb_entrepreneur_merged_v2 %>%
mutate(venturedensity_mean = (venturedensitymay18 + venturedensitynov18 + venturedensityfeb19 + venturedensitysep19 + venturedensityoct19 + venturedensitynov19 + venturedensitydec19) / 7,
highlyactive_vd_mean = (highlyactive_vdmay18 + highlyactive_vdnov18 + highlyactive_vdfeb19 + highlyactive_vdsep19 + highlyactive_vdoct19 + highlyactive_vdnov19 + highlyactive_vddec19) / 7,
pct_broadband_mlab = (frac_BB.sept + frac_BB.oct + frac_BB.nov + frac_BB.dec) / 4) %>%
select(-c(starts_with("frac_under_"), starts_with("frac_over"), starts_with("samples."), starts_with("BB_samples"), pctbbfrac_poor_ASU, state.y, county.y, starts_with("DL"), starts_with("UL"), starts_with("dl_sample"), starts_with("ul_sample"))) %>%
rename(state = state.x, county = county.x)
tx_bb_entrepreneur_merged_v2 <- tx_bb_entrepreneur_merged_v2 %>%
left_join(., fcc477_2019, by = c("FIPS" = "county_FIPS")) %>%
select(-c(providername, dbaname, blockcode, techcode, maxaddown, maxadup, maxcirdown, maxcirup, broadband)) %>% rename(pct_broadband_FCC_2019 = broadband_pct)
str(tx_bb_entrepreneur_merged_v2)
str(fcc477_2019)
fcc477_2019 <- read.csv("https://raw.githubusercontent.com/jwroycechoi/broadband-entrepreneurship/master/Datasets/FCC477_TX_June_2019.csv", sep = ";") %>% mutate(county_FIPS = as.character(county_FIPS))
tx_bb_entrepreneur_merged_v2 <- tx_bb_entrepreneur_merged_v2 %>%
left_join(., fcc477_2019, by = c("FIPS" = "county_FIPS")) %>%
select(-c(providername, dbaname, blockcode, techcode, maxaddown, maxadup, maxcirdown, maxcirup, broadband)) %>% rename(pct_broadband_FCC_2019 = broadband_pct)
